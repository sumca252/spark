version: "3"
networks:
    spark:


volumes:
    mysql_data: {}

services:
    watchtower:
        image: containrrr/watchtower
        container_name: watchtower
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock

    spark-database:
        image: isal20/spark-backend:db
        container_name: spark-database
        hostname: spark-database
        restart: always
        env_file:
            - ./spark-backend/.env
        volumes:
            - mysql_data:/var/lib/mysql
        networks:
            - spark

    spark-backend1:
        image: isal20/spark-backend:1.0.0
        container_name: spark-backend1
        restart: always
        env_file:
            - ./spark-backend/.env
        ports:
            - "1337:1337"
        environment:
            - "PORT=1337"
            - "MYSQL_HOST=spark-database"
            - "FRONTEND_URL=spark-webclient:1338"
            - "WEBADMIN_URL=spark-webadmin:3000"
        networks:
            - spark
        links:
            - spark-database
        depends_on:
            - spark-database
    spark-webclient:
        image: ranim04/spark-webclient:customer
        container_name: "spark-webclient"
        build:
            context: ./spark-webclient
            dockerfile: Dockerfile
        ports:
            - "1338:1338"
        networks:
            - spark

    spark-webadmin:
        container_name: "spark-webadmin"
        build:
            context: ./spark-frontend
            dockerfile: Dockerfile
        ports:
            - "3000:3000"
        env_file:
            - ./spark-frontend/.env
        environment:
            - "DEV_API_BASE_URL=${DEV_API_BASE_URL}"
        networks:
            - spark
